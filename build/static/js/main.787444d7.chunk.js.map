{"version":3,"sources":["components/newPerson.js","components/person.js","components/filter.js","services/persons.js","components/notification.js","app.js","index.js"],"names":["NewPerson","_ref","newName","newNumber","addName","handleNameChange","handleNumberChange","react_default","a","createElement","onSubmit","value","onChange","type","Person","props","deleteName","name","number","onClick","id","Filter","filter","handleFilterChange","baseUrl","services_persons","getAll","axios","get","then","response","data","create","newObject","post","deleteID","window","confirm","concat","delete","update","put","Notification","message","className","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","nameObject","state","persons","length","map","person","includes","find","n","updateNumber","personService","setState","setTimeout","catch","error","alert","newPerson","changedPerson","objectSpread","target","_this2","_this3","notification","components_filter","components_newPerson","toLowerCase","components_person","key","React","Component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.787444d7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NewPerson = ({ newName, newNumber, addName, handleNameChange, handleNumberChange }) => {\r\n    return (\r\n        <form onSubmit={addName}>\r\n            <div>\r\n                nimi: <input\r\n                    value={newName}\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                numero: <input\r\n                    value={newNumber}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">lisää</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default NewPerson","import React from 'react'\r\n\r\nconst Person = ({ props, deleteName }) => {\r\n    return (\r\n        <tr>\r\n            <td>{props.name}</td>\r\n            <td>{props.number}</td>\r\n            <td><button onClick={() => deleteName(props.id)}>poista</button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => {\r\n    return (\r\n        <div>\r\n            rajaa näytettäviä <input\r\n                value={filter}\r\n                onChange={handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteID = (props) => {\r\n    if (window.confirm(`poistetaanko ${props.name}`)) {\r\n        const request = axios.delete(`${baseUrl}/${props.id}`)\r\n        return request.then(response => response.data)\r\n    }\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    if (window.confirm(`muokataanko ${newObject.name}`)) {\r\n        const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n        return request.then(response => response.data)\r\n    }\r\n}\r\n\r\nexport default { getAll, create, deleteID, update }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"message\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\nimport NewPerson from './components/newPerson'\r\nimport Person from './components/person'\r\nimport Filter from './components/filter'\r\nimport personService from './services/persons'\r\nimport Notification from './components/notification'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            persons: [],\r\n            newName: '',\r\n            newNumber: '',\r\n            filter: '',\r\n            message: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                this.setState({ persons: response })\r\n            })\r\n    }\r\n    addName = (event) => {\r\n        event.preventDefault()\r\n        const nameObject = {\r\n            name: this.state.newName,\r\n            number: this.state.newNumber,\r\n            id: this.state.persons.length + 1\r\n        }\r\n        if (!this.state.persons.map(person => person.name).includes(nameObject.name)) {\r\n            const persons = this.state.persons.concat(nameObject)\r\n            personService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    this.setState({\r\n                        persons: persons,\r\n                        newName: '',\r\n                        newNumber: '',\r\n                        message: `lisättiin ${nameObject.name}`\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({ message: null })\r\n                    }, 2000)\r\n                })\r\n                .catch(error => {\r\n                    alert(`henkilön '${nameObject.name}' lisääminen ei onnistunut`)\r\n                })\r\n        }\r\n        else {\r\n            const nameObject = {\r\n                name: this.state.newName,\r\n                number: this.state.newNumber,\r\n                id: this.state.persons.find(n => n.name === this.state.newName).id\r\n            }\r\n            this.updateNumber(nameObject)\r\n        }\r\n    }\r\n    deleteName = (id) => {\r\n        const nameObject = this.state.persons.find(person => person.id === id)\r\n        personService\r\n            .deleteID(nameObject)\r\n            .then(response => {\r\n                this.setState({\r\n                    persons: this.state.persons.filter(person => person.id !== id),\r\n                    newName: '',\r\n                    newNumber: '',\r\n                    message: `poistettiin ${nameObject.name}`\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({ message: null })\r\n                }, 2000)\r\n            })\r\n            .catch(error => {\r\n                alert(`henkilö '${nameObject.name}' on jo valitettavasti poistettu palvelimelta`)\r\n                this.setState({ persons: this.state.persons.filter(n => n.id !== id) })\r\n            })\r\n\r\n    }\r\n    updateNumber = (newPerson) => {\r\n        const person = this.state.persons.find(n => n.id === newPerson.id)\r\n        const changedPerson = { ...person, number: newPerson.number }\r\n        personService\r\n            .update(newPerson.id, changedPerson)\r\n            .then(changedPerson => {\r\n                const persons = this.state.persons.filter(n => n.id !== newPerson.id)\r\n                this.setState({\r\n                    persons: persons.concat(changedPerson),\r\n                    message: `muokattiin numeroa henkilöltä ${changedPerson.name}`\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({ message: null })\r\n                }, 2000)\r\n            })\r\n            .catch(error => {\r\n                personService\r\n                .create(changedPerson)\r\n                .then(response => {\r\n                    this.setState({\r\n                        persons: this.state.persons.filter(n => n.id !== newPerson.id).concat(changedPerson),\r\n                        newName: '',\r\n                        newNumber: '',\r\n                        message: `lisättiin ${changedPerson.name}`\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({ message: null })\r\n                    }, 2000)\r\n                })\r\n            })\r\n    }\r\n    handleNameChange = (event) => {\r\n        this.setState({ newName: event.target.value })\r\n    }\r\n    handleNumberChange = (event) => {\r\n        this.setState({ newNumber: event.target.value })\r\n    }\r\n    handleFilterChange = (event) => {\r\n        this.setState({ filter: event.target.value })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Puhelinluettelo</h2>\r\n                <Notification message={this.state.message} />\r\n                <Filter filter={this.state.filter} handleFilterChange={this.handleFilterChange} />\r\n                <h2>Lisää uusi</h2>\r\n                <NewPerson newName={this.state.newName} newNumber={this.state.newNumber} addName={this.addName} handleNameChange={this.handleNameChange} handleNumberChange={this.handleNumberChange} />\r\n                <h2>Numerot</h2>\r\n                <table>\r\n                    <tbody>\r\n                        {this.state.persons.filter(person => person.name.toLowerCase().includes(this.state.filter.toLowerCase())).map(person => <Person key={person.id} props={person} deleteName={this.deleteName} />)}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}